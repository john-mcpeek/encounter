apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: {{app.group}}
  name: {{app.name}}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: {{app.name}}
  template:
    metadata:
      labels:
        app: {{app.name}}
    spec:
      initContainers:
        - name: init-auth-token
          image: {{image.repo}}/tools/aws
          env:
            - name: DB_HOST
              value: {{db.host}}
            - name: DB_PORT
              value: {{db.port}}
            - name: DB_REGION
              value: {{db.region}}
            - name: DB_OWNER
              value: {{db.owner}}
          command:
            - "/bin/bash"
            - "-c"
            - |
              AUTH_TOKEN=$(aws rds generate-db-auth-token \
                --hostname ${DB_HOST} \
                --port     ${DB_PORT} \
                --region   ${DB_REGION} \
                --username ${DB_OWNER}) &&\
              echo ${AUTH_TOKEN} > /liquibase/config/auth_token
          volumeMounts:
            - name: auth-token-vol
              mountPath: /liquibase/config
        - name: init-liquibase
          image: {{image.repo}}/{{app.name}}/liquibase/{{build-id}}
          env:
            - name: DB_HOST
              value: {{db.host}}
            - name: DB_PORT
              value: {{db.port}}
            - name: DB_NAME
              value: {{db.name}}
            - name: DB_OWNER
              value: {{db.owner}}
            - name: DB_CONTEXT
              value: {{liquibase.context}}
          volumeMounts:
            - name: auth-token-vol
              mountPath: /liquibase/config
      containers:
        - name: app
          image: {{image.repo}}/{{app.name}}/app/{{build-id}}
          env:
            - name: SPRING_PROFILES_ACTIVE
              value: k8s
            - name: SPRING_DATASOURCE_USERNAME
              value: {{db.user}}
            - name: SPRING_DATASOURCE_URL
              value: jdbc:postgresql://{{db.host}}:{{db.port}}/${db.name}?sslmode=require
          livenessProbe:
            httpGet:
              path: /actuator/health/liveness
          readinessProbe:
            httpGet:
              path: /actuator/health/readiness
      volumes:
        - name: auth-token-vol
          emptyDir:
            medium: Memory

